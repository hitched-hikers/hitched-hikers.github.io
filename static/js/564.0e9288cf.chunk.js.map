{"version":3,"file":"static/js/564.0e9288cf.chunk.js","mappings":"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","sources":["Components/BurgerMenuItem.tsx","Components/BurgerMenu.tsx","Components/PageHeader.tsx","Components/AppPage.tsx","Enums/hikeName.ts","Pages/Hikes/CountryAccordionTitle.tsx","Pages/Hikes/CountryAccordion.tsx","Pages/Hikes/HikesPage.tsx","Pages/Hikes/Map/MapMarker.tsx","Pages/Hikes/Models/hikes.ts"],"sourcesContent":["import { Box, Button, Text } from \"grommet\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\ninterface BurgerMenuItemProps {\n  path: string;\n  text: string;\n  icon: JSX.Element | undefined;\n  onClick: () => void;\n}\n\nfunction BurgerMenuItem(props: BurgerMenuItemProps): JSX.Element {\n  return (\n    <StyledLink to={props.path}>\n      <HoverBox alignContent=\"center\" direction=\"row\">\n        <Button onClick={props.onClick} icon={props.icon} />\n        <Text alignSelf=\"center\">{props.text}</Text>\n      </HoverBox>\n    </StyledLink>\n  );\n}\n\nconst HoverBox = styled(Box)`\n  &:hover {\n    opacity: 0.6;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: inherit;\n  color: inherit;\n`;\n\nexport default BurgerMenuItem;\n","import { useAtom } from \"jotai\";\nimport { stack as Menu } from \"react-burger-menu\";\nimport { darkModeAtom } from \"../Utils/Theme\";\nimport { Box, Button, Text } from \"grommet\";\nimport { Home, Moon, Sun, TreeOption } from \"grommet-icons\";\nimport { useRef, useState } from \"react\";\nimport BurgerMenuItem from \"./BurgerMenuItem\";\n\nfunction BurgerMenu(): JSX.Element {\n  const [darkMode, setDarkMode] = useAtom(darkModeAtom);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const burgerMenuStyles = useRef({\n    bmBurgerBars: {\n      background: \"#00873D\",\n    },\n    bmBurgerButton: {\n      position: \"fixed\",\n      width: \"36px\",\n      height: \"30px\",\n      left: \"24px\",\n      top: \"24px\",\n    },\n    bmBurgerBarsHover: {\n      background: \"#00873D\",\n    },\n    bmCrossButton: {\n      height: \"24px\",\n      width: \"24px\",\n    },\n    bmCross: {\n      background: \"#bdc3c7\",\n    },\n    bmMenuWrap: {\n      position: \"fixed\",\n      height: \"100%\",\n    },\n    bmMenu: {\n      background: \"#444444\",\n      padding: \"2.5em 1.5em 0\",\n      fontSize: \"1.15em\",\n      overflow: \"hidden\",\n    },\n    bmMorphShape: {\n      fill: \"#373a47\",\n    },\n    bmItemList: {\n      color: \"#b8b7ad\",\n      padding: \"0.8em\",\n    },\n    bmItem: {\n      display: \"inline-block\",\n    },\n    bmOverlay: {\n      background: \"rgba(0, 0, 0, 0.3)\",\n    },\n  });\n\n  const closeMenu = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      onClose={() => setIsOpen(false)}\n      onOpen={() => setIsOpen(true)}\n      styles={burgerMenuStyles.current}\n    >\n      <Box>\n        <BurgerMenuItem\n          path=\"/\"\n          onClick={closeMenu}\n          text=\"Home\"\n          icon={<Home color=\"#FFFFFF\" />}\n        />\n        <BurgerMenuItem\n          path=\"/hikes\"\n          onClick={closeMenu}\n          text=\"Hikes\"\n          icon={<TreeOption color=\"#FFFFFF\" />}\n        />\n        <Box alignContent=\"center\" direction=\"row\">\n          <Button\n            icon={darkMode ? <Sun color=\"#FFFFFF\" /> : <Moon color=\"#FFFFFF\" />}\n            onClick={() => setDarkMode((darkTheme) => !darkTheme)}\n          />\n          <Text alignSelf=\"center\">Theme</Text>\n        </Box>\n      </Box>\n    </Menu>\n  );\n}\n\nexport default BurgerMenu;\n","import { Box, Button, Header } from \"grommet\";\nimport { Home, Moon, Sun, TreeOption } from \"grommet-icons\";\nimport { useAtom } from \"jotai\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { darkModeAtom } from \"../Utils/Theme\";\nimport styled from \"styled-components\";\nimport { Path } from \"../Enums/path\";\n\nfunction PageHeader(): JSX.Element {\n  const [darkMode, setDarkMode] = useAtom(darkModeAtom);\n  const location = useLocation();\n\n  return (\n    <Header\n      style={{ paddingTop: \"16px\" }}\n      sticky={\"scrollup\"}\n      background={{ dark: \"dark-1\", light: \"light-1\" }}\n    >\n      <Box direction=\"row\" justify=\"between\">\n        <StyledLink to={Path.Home}>\n          <Button\n            icon={<Home />}\n            label=\"Home\"\n            primary={location.pathname === Path.Home}\n            hoverIndicator\n          />\n        </StyledLink>\n        <StyledLink to={Path.Hikes}>\n          <Button\n            icon={<TreeOption />}\n            label=\"Hikes\"\n            primary={location.pathname === Path.Hikes}\n            hoverIndicator\n          />\n        </StyledLink>\n      </Box>\n      <Button\n        style={{ paddingRight: \"16px\" }}\n        icon={darkMode ? <Sun color=\"#FFFFFF\" /> : <Moon color=\"#000000\" />}\n        onClick={() => setDarkMode((darkTheme) => !darkTheme)}\n      />\n    </Header>\n  );\n}\n\nconst StyledLink = styled(Link)`\n  padding-left: 16px;\n`;\n\nexport default PageHeader;\n","import { Page } from \"grommet\";\nimport styled from \"styled-components\";\nimport BurgerMenu from \"./BurgerMenu\";\nimport MediaQuery from \"react-responsive\";\nimport PageHeader from \"./PageHeader\";\n\ninterface AppPageProps {\n  children: React.ReactNode;\n}\n\nfunction AppPage(props: AppPageProps): JSX.Element {\n  return (\n    <>\n      <MediaQuery query=\"(max-device-width: 1024px)\">\n        <BurgerMenu />\n        <FullScreenPageMobile background=\"pageBackground\">\n          {props.children}\n        </FullScreenPageMobile>\n      </MediaQuery>\n      <MediaQuery query=\"(min-device-width: 1024px)\">\n        <PageHeader />\n        <FullScreenPageDesktop background=\"pageBackground\">\n          {props.children}\n        </FullScreenPageDesktop>\n      </MediaQuery>\n    </>\n  );\n}\n\nconst FullScreenPageMobile = styled(Page)`\n  min-height: 100vh;\n  padding-top: 72px;\n  padding-bottom: 24px;\n`;\n\nconst FullScreenPageDesktop = styled(Page)`\n  min-height: 100vh;\n  padding-top: 32px;\n`;\n\nexport default AppPage;\n","export enum HikeName {\n  CoryPass = \"Cory Pass\",\n  SulphurMountain = \"Sulphur Mountain\",\n  TunnelMountain = \"Tunnel Mountain\",\n  MountJacquesCartier = \"Mount Jacques Cartier\",\n  MountAlbert = \"Mount Albert\",\n  MamquamFalls = \"Mamquam Falls\",\n  StawamusChief = \"Stawamus Chief\",\n  PathOfLemons = \"Path of Lemons\",\n  PathOfTheGods = \"Path of the Gods\",\n  MountGiant = \"Mount Giant\",\n  AlgonquinPeak = \"Algonquin Peak\",\n  JayMountain = \"Jay Mountain\",\n  MountMansfield = \"Mount Mansfield\",\n}\n","import { Box, Text } from \"grommet\";\nimport styled from \"styled-components\";\n\ninterface CountryAccordionTitleProps {\n  country: string;\n  countryFlag: React.ReactNode;\n}\n\nfunction CountryAccordionTitle(props: CountryAccordionTitleProps): JSX.Element {\n  return (\n    <Box direction=\"row\" align=\"center\">\n      <CountryFlagContainer>{props.countryFlag}</CountryFlagContainer>\n      <CountryTitleText>{props.country}</CountryTitleText>\n    </Box>\n  );\n}\n\nconst CountryFlagContainer = styled.div`\n  width: 30px;\n  height: 20px;\n  margin-left: 8px;\n`;\n\nconst CountryTitleText = styled(Text)`\n  margin-left: 8px;\n`;\n\nexport default CountryAccordionTitle;\n","import { Accordion, AccordionPanel, Box, Text } from \"grommet\";\nimport styled from \"styled-components\";\nimport { Hike } from \"./Models/hikes\";\nimport { Link } from \"react-router-dom\";\nimport CountryAccordionTitle from \"./CountryAccordionTitle\";\n\ninterface CountryAccordionProps {\n  country: string;\n  countryFlag: React.ReactNode;\n  regions: HikingRegion[];\n}\n\nexport interface HikingRegion {\n  name: string;\n  hikes: Hike[];\n}\n\nfunction CountryAccordion(props: CountryAccordionProps): JSX.Element {\n  return (\n    <>\n      <CountryAccordionPanel\n        label={\n          <CountryAccordionTitle\n            country={props.country}\n            countryFlag={props.countryFlag}\n          />\n        }\n      >\n        <NestedRegionAccordion\n          multiple\n          background={{ dark: \"dark-3\", light: \"light-3\" }}\n        >\n          {props.regions.map((region) => {\n            return (\n              <AccordionPanel key={region.name} label={region.name}>\n                {region.hikes.map((hike) => {\n                  return (\n                    <StyledHikeNameBox key={hike.name} pad=\"medium\">\n                      <StyledLink to={hike.blogPath}>\n                        <Text>{hike.name}</Text>\n                      </StyledLink>\n                    </StyledHikeNameBox>\n                  );\n                })}\n              </AccordionPanel>\n            );\n          })}\n        </NestedRegionAccordion>\n      </CountryAccordionPanel>\n    </>\n  );\n}\n\nconst CountryAccordionPanel = styled(AccordionPanel)`\n  padding: 24px;\n`;\n\nconst NestedRegionAccordion = styled(Accordion)`\n  padding-left: 24px;\n  border-radius: 6px;\n`;\n\nconst StyledHikeNameBox = styled(Box)`\n  padding-left: 24px;\n\n  &:hover {\n    opacity: 0.6;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: inherit;\n  color: inherit;\n`;\n\nexport default CountryAccordion;\n","import { Accordion, PageContent, Card } from \"grommet\";\nimport styled from \"styled-components\";\nimport AppPage from \"../../Components/AppPage\";\nimport { US, CA, IT } from \"country-flag-icons/react/3x2\";\nimport Map, { Source, ViewStateChangeEvent } from \"react-map-gl\";\nimport CountryAccordion from \"./CountryAccordion\";\nimport MapboxAccessToken from \"../../Utils/MapboxAccessToken.txt\";\nimport {\n  adirondackHikes,\n  allHikes,\n  amalfiHikes,\n  banffHikes,\n  gaspeHikes,\n  greenMountainHikes,\n  squamishHikes,\n} from \"./Models/hikes\";\nimport MapMarker from \"./Map/MapMarker\";\nimport { useState } from \"react\";\n\nfunction HikesPage(): JSX.Element {\n  const [isMarkerFixed, setIsMarkerFixed] = useState(false);\n  const [mapboxAcessToken, setMapboxAccessToken] = useState<string | undefined>(\n    undefined\n  );\n\n  fetch(MapboxAccessToken)\n    .then((response) => response.text())\n    .then((text) => setMapboxAccessToken(text));\n\n  const handleMapZoomEnd = (event: ViewStateChangeEvent) => {\n    if (event.viewState.zoom > 8 && isMarkerFixed === false) {\n      setIsMarkerFixed(true);\n    } else if (event.viewState.zoom <= 8 && isMarkerFixed === true) {\n      setIsMarkerFixed(false);\n    }\n  };\n\n  return (\n    <AppPage>\n      <StyledPageContent align=\"center\">\n        <MapContainer>\n          {mapboxAcessToken ? (\n            <Map\n              initialViewState={{\n                longitude: -100,\n                latitude: 40,\n                zoom: 1,\n              }}\n              terrain={{ source: \"mapbox-dem\", exaggeration: 1.5 }}\n              mapboxAccessToken={mapboxAcessToken}\n              style={{ width: \"100%\", height: 480 }}\n              mapStyle=\"mapbox://styles/mapbox/outdoors-v12\"\n              onZoomEnd={handleMapZoomEnd}\n            >\n              <Source\n                id=\"mapbox-dem\"\n                type=\"raster-dem\"\n                url=\"mapbox://mapbox.mapbox-terrain-dem-v1\"\n                tileSize={512}\n                maxzoom={14}\n              />\n              {allHikes.map((hike) => (\n                <MapMarker\n                  blogPath={hike.blogPath}\n                  markerName={hike.name}\n                  latitude={hike.latitude}\n                  longitude={hike.longitude}\n                  open={isMarkerFixed}\n                />\n              ))}\n            </Map>\n          ) : (\n            <MapSkeleton />\n          )}\n        </MapContainer>\n\n        <LocationCard background={{ dark: \"dark-2\", light: \"light-2\" }}>\n          <RootAccordion>\n            <CountryAccordion\n              country={\"Canada\"}\n              countryFlag={<CA />}\n              regions={[\n                {\n                  name: \"Banff\",\n                  hikes: banffHikes,\n                },\n                {\n                  name: \"Gaspe\",\n                  hikes: gaspeHikes,\n                },\n                {\n                  name: \"Squamish\",\n                  hikes: squamishHikes,\n                },\n              ]}\n            />\n\n            <CountryAccordion\n              country={\"Italy\"}\n              countryFlag={<IT />}\n              regions={[\n                {\n                  name: \"Amalfi\",\n                  hikes: amalfiHikes,\n                },\n              ]}\n            />\n\n            <CountryAccordion\n              country={\"United States of America\"}\n              countryFlag={<US />}\n              regions={[\n                {\n                  name: \"Adirondacks\",\n                  hikes: adirondackHikes,\n                },\n                {\n                  name: \"Green Mountains\",\n                  hikes: greenMountainHikes,\n                },\n              ]}\n            />\n          </RootAccordion>\n        </LocationCard>\n      </StyledPageContent>\n    </AppPage>\n  );\n}\n\nconst MapContainer = styled.div`\n  width: 100%;\n`;\n\nconst MapSkeleton = styled(Card)`\n  height: 480px;\n  width: 100%;\n  border-radius: 8px;\n`;\n\nconst StyledPageContent = styled(PageContent)`\n  width: 100%;\n  max-width: 1024px;\n`;\n\nconst LocationCard = styled(Card)`\n  height: auto;\n  width: 100%;\n  overflow: visible;\n  margin-top: 24px;\n  margin-bottom: 24px;\n  box-shadow: none;\n`;\n\nconst RootAccordion = styled(Accordion)`\n  width: 100%;\n`;\n\nexport default HikesPage;\n","import { Marker } from \"react-map-gl\";\nimport MapPin from \"./MapPin.png\";\nimport styled from \"styled-components\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport \"./MapMarker.css\";\nimport { useNavigate } from \"react-router-dom\";\n\ninterface MapMarkerProps {\n  blogPath?: string;\n  closeButton?: boolean;\n  open?: boolean;\n  markerName: string;\n  latitude: number;\n  longitude: number;\n}\n\nfunction MapMarker(props: MapMarkerProps): JSX.Element {\n  const markerRef = useRef<mapboxgl.Marker>(null);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const navigate = useNavigate();\n\n  const popup = useMemo(() => {\n    return new mapboxgl.Popup({\n      anchor: \"bottom\",\n      closeButton: props.closeButton,\n      offset: 16,\n      className: \"marker-text\",\n    }).setText(props.markerName);\n  }, [props.closeButton, props.markerName]);\n\n  const togglePopup = useCallback(() => {\n    markerRef.current?.togglePopup();\n  }, []);\n\n  useEffect(() => {\n    if (props.open === true && isPopupOpen === false) {\n      togglePopup();\n      setIsPopupOpen(true);\n    } else if (props.open === false && isPopupOpen === true) {\n      togglePopup();\n      setIsPopupOpen(false);\n    }\n  }, [isPopupOpen, props.open, togglePopup]);\n\n  return (\n    <Marker\n      ref={markerRef}\n      onClick={() => props.blogPath && navigate(props.blogPath)}\n      longitude={props.longitude}\n      latitude={props.latitude}\n      popup={popup}\n    >\n      <StyledMapPin\n        onMouseEnter={() => !props.open && togglePopup()}\n        onMouseLeave={() => !props.open && togglePopup()}\n        alt=\"Map Pin\"\n        src={MapPin}\n      />\n    </Marker>\n  );\n}\n\nconst StyledMapPin = styled.img`\n  cursor: pointer;\n  width: 16px;\n`;\n\nexport default MapMarker;\n","import { BlogPath } from \"../../../Enums/blogPath\";\nimport { HikeName } from \"../../../Enums/hikeName\";\n\nexport interface Hike {\n  name: string;\n  date: Date;\n  blogPath: string;\n  longitude: number;\n  latitude: number;\n  distance: number;\n  elevationGain: number;\n}\n\n// Canada\nexport const banffHikes: Hike[] = [\n  {\n    name: HikeName.CoryPass,\n    blogPath: BlogPath.CoryPass,\n    date: new Date(),\n    latitude: 51.2017,\n    longitude: -115.69,\n    distance: 0,\n    elevationGain: 0,\n  },\n  {\n    name: HikeName.SulphurMountain,\n    blogPath: BlogPath.SulphurMountain,\n    date: new Date(),\n    latitude: 51.1236,\n    longitude: -115.5556,\n    distance: 0,\n    elevationGain: 0,\n  },\n  {\n    name: HikeName.TunnelMountain,\n    blogPath: BlogPath.TunnelMountain,\n    date: new Date(),\n    latitude: 51.1767,\n    longitude: -115.5542,\n    distance: 0,\n    elevationGain: 0,\n  },\n];\n\nexport const gaspeHikes: Hike[] = [\n  {\n    name: HikeName.MountJacquesCartier,\n    blogPath: BlogPath.MountJacquesCartier,\n    date: new Date(),\n    latitude: 48.9833,\n    longitude: -65.95,\n    distance: 0,\n    elevationGain: 0,\n  },\n  {\n    name: HikeName.MountAlbert,\n    blogPath: BlogPath.MountAlbert,\n    date: new Date(),\n    latitude: 48.9214,\n    longitude: -66.19495,\n    distance: 0,\n    elevationGain: 0,\n  },\n];\n\nexport const squamishHikes: Hike[] = [\n  {\n    name: HikeName.MamquamFalls,\n    blogPath: BlogPath.MamquamFalls,\n    date: new Date(),\n    latitude: 49.72120658690391,\n    longitude: -123.09158981588705,\n    distance: 0,\n    elevationGain: 0,\n  },\n  {\n    name: HikeName.StawamusChief,\n    blogPath: BlogPath.StawamusChief,\n    date: new Date(),\n    latitude: 49.6867,\n    longitude: -123.135,\n    distance: 0,\n    elevationGain: 0,\n  },\n];\n\n// Italy\nexport const amalfiHikes: Hike[] = [\n  {\n    name: HikeName.PathOfLemons,\n    blogPath: BlogPath.PathOfTheLemons,\n    date: new Date(2023, 5, 5),\n    latitude: 40.66231747545338,\n    longitude: 14.630269119553638,\n    distance: 0,\n    elevationGain: 0,\n  },\n  {\n    name: HikeName.PathOfTheGods,\n    blogPath: BlogPath.PathOfTheGods,\n    date: new Date(2023, 5, 6),\n    latitude: 40.625117,\n    longitude: 14.534947,\n    distance: 5.8,\n    elevationGain: 1167,\n  },\n];\n\n// USA\nexport const adirondackHikes: Hike[] = [\n  {\n    name: HikeName.MountGiant,\n    blogPath: BlogPath.MountGiant,\n    date: new Date(),\n    latitude: 44.1437,\n    longitude: -73.7205,\n    distance: 0,\n    elevationGain: 0,\n  },\n  {\n    name: HikeName.AlgonquinPeak,\n    blogPath: BlogPath.AlgonquinPeak,\n    date: new Date(2023, 8, 19),\n    latitude: 44.1437,\n    longitude: -73.9865,\n    distance: 16.32,\n    elevationGain: 3632,\n  },\n  {\n    name: HikeName.JayMountain,\n    blogPath: BlogPath.JayMountain,\n    date: new Date(),\n    latitude: 44.3125,\n    longitude: -73.6857,\n    distance: 0,\n    elevationGain: 0,\n  },\n];\n\nexport const greenMountainHikes: Hike[] = [\n  {\n    name: HikeName.MountMansfield,\n    blogPath: BlogPath.MountMansfield,\n    date: new Date(),\n    latitude: 44.5437,\n    longitude: -72.8143,\n    distance: 0,\n    elevationGain: 0,\n  },\n];\n\n// All hike concatenation \nexport const allHikes = banffHikes\n  .concat(gaspeHikes)\n  .concat(squamishHikes)\n  .concat(amalfiHikes)\n  .concat(adirondackHikes)\n  .concat(greenMountainHikes);\n"],"names":["HoverBox","styled","Box","_templateObject","_taggedTemplateLiteral","StyledLink","Link","_templateObject2","props","_jsx","to","path","children","_jsxs","alignContent","direction","Button","onClick","icon","Text","alignSelf","text","darkMode","setDarkMode","useAtom","darkModeAtom","isOpen","setIsOpen","useState","burgerMenuStyles","useRef","bmBurgerBars","background","bmBurgerButton","position","width","height","left","top","bmBurgerBarsHover","bmCrossButton","bmCross","bmMenuWrap","bmMenu","padding","fontSize","overflow","bmMorphShape","fill","bmItemList","color","bmItem","display","bmOverlay","closeMenu","Menu","onClose","onOpen","styles","current","BurgerMenuItem","Home","TreeOption","Sun","Moon","darkTheme","location","useLocation","Header","style","paddingTop","sticky","dark","light","justify","Path","label","primary","pathname","hoverIndicator","Hikes","paddingRight","FullScreenPageMobile","Page","FullScreenPageDesktop","_Fragment","MediaQuery","query","BurgerMenu","PageHeader","HikeName","CountryFlagContainer","div","CountryTitleText","align","countryFlag","country","CountryAccordionPanel","AccordionPanel","NestedRegionAccordion","Accordion","StyledHikeNameBox","_templateObject3","_templateObject4","CountryAccordionTitle","multiple","regions","map","region","name","hikes","hike","pad","blogPath","MapContainer","MapSkeleton","Card","StyledPageContent","PageContent","LocationCard","RootAccordion","_templateObject5","isMarkerFixed","setIsMarkerFixed","mapboxAcessToken","setMapboxAccessToken","undefined","fetch","MapboxAccessToken","then","response","AppPage","Map","initialViewState","longitude","latitude","zoom","terrain","source","exaggeration","mapboxAccessToken","mapStyle","onZoomEnd","event","viewState","Source","id","type","url","tileSize","maxzoom","allHikes","MapMarker","markerName","open","CountryAccordion","CA","banffHikes","gaspeHikes","squamishHikes","IT","amalfiHikes","US","adirondackHikes","greenMountainHikes","StyledMapPin","img","markerRef","isPopupOpen","setIsPopupOpen","navigate","useNavigate","popup","useMemo","mapboxgl","anchor","closeButton","offset","className","setText","togglePopup","useCallback","_markerRef$current","useEffect","Marker","ref","onMouseEnter","onMouseLeave","alt","src","CoryPass","BlogPath","date","Date","distance","elevationGain","SulphurMountain","TunnelMountain","MountJacquesCartier","MountAlbert","MamquamFalls","StawamusChief","PathOfLemons","PathOfTheLemons","PathOfTheGods","MountGiant","AlgonquinPeak","JayMountain","MountMansfield","concat"],"sourceRoot":""}