{"version":3,"file":"static/js/542.2bd0f879.chunk.js","mappings":"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","sources":["Components/BurgerMenuItem.tsx","Components/BurgerMenu.tsx","Components/PageHeader.tsx","Components/AppPage.tsx","Utils/images.ts","Components/HikeBlogTemplate.tsx","Enums/hikeName.ts","Pages/BlogPages/PathOfTheLemons/PathOfLemons.tsx","Pages/Hikes/Models/hikes.ts"],"sourcesContent":["import { Box, Button, Text } from \"grommet\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\ninterface BurgerMenuItemProps {\n  path: string;\n  text: string;\n  icon: JSX.Element | undefined;\n  onClick: () => void;\n}\n\nfunction BurgerMenuItem(props: BurgerMenuItemProps): JSX.Element {\n  return (\n    <StyledLink to={props.path}>\n      <HoverBox alignContent=\"center\" direction=\"row\">\n        <Button onClick={props.onClick} icon={props.icon} />\n        <Text alignSelf=\"center\">{props.text}</Text>\n      </HoverBox>\n    </StyledLink>\n  );\n}\n\nconst HoverBox = styled(Box)`\n  &:hover {\n    opacity: 0.6;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: inherit;\n  color: inherit;\n`;\n\nexport default BurgerMenuItem;\n","import { useAtom } from \"jotai\";\nimport { stack as Menu } from \"react-burger-menu\";\nimport { darkModeAtom } from \"../Utils/Theme\";\nimport { Box, Button, Text } from \"grommet\";\nimport { Home, Moon, Sun, TreeOption } from \"grommet-icons\";\nimport { useRef, useState } from \"react\";\nimport BurgerMenuItem from \"./BurgerMenuItem\";\n\nfunction BurgerMenu(): JSX.Element {\n  const [darkMode, setDarkMode] = useAtom(darkModeAtom);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const burgerMenuStyles = useRef({\n    bmBurgerBars: {\n      background: \"#00873D\",\n    },\n    bmBurgerButton: {\n      position: \"fixed\",\n      width: \"36px\",\n      height: \"30px\",\n      left: \"24px\",\n      top: \"24px\",\n    },\n    bmBurgerBarsHover: {\n      background: \"#00873D\",\n    },\n    bmCrossButton: {\n      height: \"24px\",\n      width: \"24px\",\n    },\n    bmCross: {\n      background: \"#bdc3c7\",\n    },\n    bmMenuWrap: {\n      position: \"fixed\",\n      height: \"100%\",\n    },\n    bmMenu: {\n      background: \"#444444\",\n      padding: \"2.5em 1.5em 0\",\n      fontSize: \"1.15em\",\n      overflow: \"hidden\",\n    },\n    bmMorphShape: {\n      fill: \"#373a47\",\n    },\n    bmItemList: {\n      color: \"#b8b7ad\",\n      padding: \"0.8em\",\n    },\n    bmItem: {\n      display: \"inline-block\",\n    },\n    bmOverlay: {\n      background: \"rgba(0, 0, 0, 0.3)\",\n    },\n  });\n\n  const closeMenu = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      onClose={() => setIsOpen(false)}\n      onOpen={() => setIsOpen(true)}\n      styles={burgerMenuStyles.current}\n    >\n      <Box>\n        <BurgerMenuItem\n          path=\"/\"\n          onClick={closeMenu}\n          text=\"Home\"\n          icon={<Home color=\"#FFFFFF\" />}\n        />\n        <BurgerMenuItem\n          path=\"/hikes\"\n          onClick={closeMenu}\n          text=\"Hikes\"\n          icon={<TreeOption color=\"#FFFFFF\" />}\n        />\n        <Box alignContent=\"center\" direction=\"row\">\n          <Button\n            icon={darkMode ? <Sun color=\"#FFFFFF\" /> : <Moon color=\"#FFFFFF\" />}\n            onClick={() => setDarkMode((darkTheme) => !darkTheme)}\n          />\n          <Text alignSelf=\"center\">Theme</Text>\n        </Box>\n      </Box>\n    </Menu>\n  );\n}\n\nexport default BurgerMenu;\n","import { Box, Button, Header } from \"grommet\";\nimport { Home, Moon, Sun, TreeOption } from \"grommet-icons\";\nimport { useAtom } from \"jotai\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { darkModeAtom } from \"../Utils/Theme\";\nimport styled from \"styled-components\";\nimport { Path } from \"../Enums/path\";\n\nfunction PageHeader(): JSX.Element {\n  const [darkMode, setDarkMode] = useAtom(darkModeAtom);\n  const location = useLocation();\n\n  return (\n    <Header\n      style={{ paddingTop: \"16px\" }}\n      sticky={\"scrollup\"}\n      background={{ dark: \"dark-1\", light: \"light-1\" }}\n    >\n      <Box direction=\"row\" justify=\"between\">\n        <StyledLink to={Path.Home}>\n          <Button\n            icon={<Home />}\n            label=\"Home\"\n            primary={location.pathname === Path.Home}\n            hoverIndicator\n          />\n        </StyledLink>\n        <StyledLink to={Path.Hikes}>\n          <Button\n            icon={<TreeOption />}\n            label=\"Hikes\"\n            primary={location.pathname === Path.Hikes}\n            hoverIndicator\n          />\n        </StyledLink>\n      </Box>\n      <Button\n        style={{ paddingRight: \"16px\" }}\n        icon={darkMode ? <Sun color=\"#FFFFFF\" /> : <Moon color=\"#000000\" />}\n        onClick={() => setDarkMode((darkTheme) => !darkTheme)}\n      />\n    </Header>\n  );\n}\n\nconst StyledLink = styled(Link)`\n  padding-left: 16px;\n`;\n\nexport default PageHeader;\n","import { Page } from \"grommet\";\nimport styled from \"styled-components\";\nimport BurgerMenu from \"./BurgerMenu\";\nimport MediaQuery from \"react-responsive\";\nimport PageHeader from \"./PageHeader\";\n\ninterface AppPageProps {\n  children: React.ReactNode;\n}\n\nfunction AppPage(props: AppPageProps): JSX.Element {\n  return (\n    <>\n      <MediaQuery query=\"(max-device-width: 1024px)\">\n        <BurgerMenu />\n        <FullScreenPageMobile background=\"pageBackground\">\n          {props.children}\n        </FullScreenPageMobile>\n      </MediaQuery>\n      <MediaQuery query=\"(min-device-width: 1024px)\">\n        <PageHeader />\n        <FullScreenPageDesktop background=\"pageBackground\">\n          {props.children}\n        </FullScreenPageDesktop>\n      </MediaQuery>\n    </>\n  );\n}\n\nconst FullScreenPageMobile = styled(Page)`\n  min-height: 100vh;\n  padding-top: 72px;\n  padding-bottom: 24px;\n`;\n\nconst FullScreenPageDesktop = styled(Page)`\n  min-height: 100vh;\n  padding-top: 32px;\n`;\n\nexport default AppPage;\n","\nexport const imageUrlFormatter = (imageId: string): string => {\n    return `https://drive.google.com/thumbnail?id=${imageId}&sz=w1024`;\n}","import {\n  Card,\n  Carousel,\n  Heading,\n  Image,\n  PageContent,\n  PageHeader,\n  Table,\n  Text,\n  TableBody,\n  TableCell,\n  TableRow,\n  Button,\n  Skeleton,\n  Markdown,\n} from \"grommet\";\nimport AppPage from \"./AppPage\";\nimport styled from \"styled-components\";\nimport { imageUrlFormatter } from \"../Utils/images\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { Hike } from \"../Pages/Hikes/Models/hikes\";\n\ninterface HikeBlogProps {\n  hike: Hike;\n  coverPhotoId: string;\n  summary: string;\n  allTrailsIframeSource: string;\n  galleryImageIds: string[];\n  blog: string;\n}\n\nfunction HikeBlogTemplate(props: HikeBlogProps): JSX.Element {\n  const [loadedImages, setLoadedImages] = useState(0);\n  const [isAllTrailsIframeLoaded, setIsAlltrailsIframeLoaded] = useState(false);\n  const [isCoverImageLoaded, setIsCoverImageLoaded] = useState(false);\n\n  const appPageRef = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    appPageRef.current?.scrollIntoView();\n  }, [appPageRef]);\n\n  return (\n    <div ref={appPageRef}>\n      <AppPage>\n        <StyledPageContent alignContent=\"center\">\n          {!isCoverImageLoaded && <CoverImageSkeleton />}\n          <CoverImage\n            onLoad={() => setIsCoverImageLoaded(true)}\n            fit=\"cover\"\n            src={imageUrlFormatter(props.coverPhotoId)}\n            hidden={!isCoverImageLoaded}\n          />\n          <HeaderContainer>\n            <TitleContainer>\n              <PageHeader\n                title={props.hike.name}\n                subtitle={props.hike.date.toLocaleDateString(\"en-US\", {\n                  year: \"numeric\",\n                  month: \"long\",\n                  day: \"numeric\",\n                })}\n              />\n            </TitleContainer>\n          </HeaderContainer>\n\n          <SummaryText>{props.summary}</SummaryText>\n\n          <Heading level={2}>The Trail</Heading>\n          {!isAllTrailsIframeLoaded && <AllTrailsSkeleton />}\n          <AllTrailsIFrame\n            onLoad={() => setIsAlltrailsIframeLoaded(true)}\n            className=\"alltrails\"\n            src={props.allTrailsIframeSource}\n            title={props.hike.name}\n            hidden={!isAllTrailsIframeLoaded}\n          />\n          <StatsCard\n            alignSelf=\"center\"\n            background={{ dark: \"dark-2\", light: \"light-3\" }}\n          >\n            <Table>\n              <TableBody>\n                <TableRow>\n                  <TableCell scope=\"row\">\n                    <strong>Mileage</strong>\n                  </TableCell>\n                  <TableCell>{props.hike.distance} mi</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell scope=\"row\">\n                    <strong>Elevation Gain</strong>\n                  </TableCell>\n                  <TableCell>{props.hike.elevationGain} ft</TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n          </StatsCard>\n\n          <Link\n            to={`/3d?name=${props.hike.name}&latitude=${String(\n              props.hike.latitude\n            )}&longitude=${String(props.hike.longitude)}`}\n          >\n            <ThreeDimensionalMapButton primary label=\"See Mountain in 3D\" />\n          </Link>\n\n          <Heading level={2}>Gallery</Heading>\n          {loadedImages !== props.galleryImageIds.length && (\n            <CarouselSkeleton />\n          )}\n          <StyledCarousel\n            hidden={loadedImages !== props.galleryImageIds.length}\n            wrap\n            width=\"640px\"\n            play={5000}\n            fill\n          >\n            {props.galleryImageIds.map((imageId) => {\n              return (\n                <CarouselImage\n                  onLoad={() =>\n                    setLoadedImages((loadedImages) => loadedImages + 1)\n                  }\n                  fit=\"cover\"\n                  src={imageUrlFormatter(imageId)}\n                />\n              );\n            })}\n          </StyledCarousel>\n\n          <MarkdownHeader level={2}>The Hike</MarkdownHeader>\n          <MarkdownContainer>\n            <Markdown>{props.blog}</Markdown>\n          </MarkdownContainer>\n        </StyledPageContent>\n      </AppPage>\n    </div>\n  );\n}\n\nconst StyledPageContent = styled(PageContent)`\n  width: 100%;\n  max-width: 1024px;\n`;\n\nconst HeaderContainer = styled.div`\n  position: relative;\n  color: white;\n`;\n\nconst CoverImage = styled(Image)`\n  max-height: 400px;\n  border-radius: 8px;\n`;\n\nconst CoverImageSkeleton = styled(Skeleton)`\n  height: 400px;\n  width: 100%;\n  border-radius: 8px;\n`;\n\nconst TitleContainer = styled.div`\n  position: absolute;\n  bottom: 8px;\n  left: 16px;\n`;\n\nconst SummaryText = styled(Text)`\n  padding: 24px 0;\n`;\n\nconst StatsCard = styled(Card)`\n  width: 100%;\n  box-shadow: none;\n  padding: 4px 0;\n  margin: 8px 0;\n  border-radius: 8px;\n`;\n\nconst AllTrailsIFrame = styled.iframe`\n  width: 100%;\n  border-radius: 8px;\n  height: 400px;\n`;\n\nconst AllTrailsSkeleton = styled(Skeleton)`\n  width: 100%;\n  border-radius: 8px;\n  height: 400px;\n`;\n\nconst CarouselImage = styled(Image)`\n  max-width: 100%;\n  width: auto;\n  height: auto;\n`;\n\nconst StyledCarousel = styled(Carousel)`\n  max-width: 100%;\n  width: auto;\n  height: auto;\n  border-radius: 8px;\n`;\n\nconst CarouselSkeleton = styled(Skeleton)`\n  width: 100;\n  border-radius: 8px;\n  height: 480px;\n`;\n\nconst ThreeDimensionalMapButton = styled(Button)`\n  width: 100%;\n  margin: 4px 0;\n`;\n\nconst MarkdownHeader = styled(Heading)`\n  margin-top: 48px;\n  margin-bottom: 0;\n`;\n\nconst MarkdownContainer = styled.div`\n  p {\n    max-width: 100%;\n  }\n  img {\n    max-width: 100%;\n    width: auto;\n    height: auto;\n    border-radius: 8px;\n  }\n`;\n\nexport default HikeBlogTemplate;\n","export enum HikeName {\n  CoryPass = \"Cory Pass\",\n  SulphurMountain = \"Sulphur Mountain\",\n  TunnelMountain = \"Tunnel Mountain\",\n  MountJacquesCartier = \"Mount Jacques Cartier\",\n  MountAlbert = \"Mount Albert\",\n  MamquamFalls = \"Mamquam Falls\",\n  StawamusChief = \"Stawamus Chief\",\n  PathOfLemons = \"Path of Lemons\",\n  PathOfTheGods = \"Path of the Gods\",\n  MountGiant = \"Mount Giant\",\n  AlgonquinPeak = \"Algonquin Peak\",\n  JayMountain = \"Jay Mountain\",\n  MountMansfield = \"Mount Mansfield\",\n}\n","import HikeBlogTemplate from \"../../../Components/HikeBlogTemplate\";\nimport Blog from \"./Blog.md\";\nimport { useState } from \"react\";\nimport { Hike, amalfiHikes } from \"../../Hikes/Models/hikes\";\nimport { HikeName } from \"../../../Enums/hikeName\";\n\nfunction PathTheLemons(): JSX.Element {\n  const [blog, setBlog] = useState(\"\");\n\n  const hike = amalfiHikes.find(\n    (hike) => hike.name === HikeName.PathOfLemons\n  ) as Hike;\n\n  fetch(Blog)\n    .then((response) => response.text())\n    .then((text) => {\n      setBlog(text);\n    });\n\n  return (\n    <HikeBlogTemplate\n      hike={hike}\n      coverPhotoId={\"1nv-on_ohpJwp9x22ifT14_HP82dctjcl\"}\n      summary={\n        \"A zesty hike, filled with good and bad smells alike. On your way up, you are surrounded by lemon trees and lemon farms with views overlooking the Mediterranean. We did an adapted version of the all trails hike (below): starting in Minori, hiking up to Convento San Nicola (a church), and back down into Maori. The best part of this hike was grabbing a lemon, ripping it in two, and putting it in our water bottles.\"\n      }\n      allTrailsIframeSource=\"https://www.alltrails.com/widget/trail/italy/campania/sentiero-dei-limoni-maiori-minori-ravello?u=i&sh=x01s6z\"\n      galleryImageIds={[\n        \"1VPJGnv2h6-bs4JScM94FeJ3mGV0Fos5e\",\n        \"1ON_zM9q1S8aizCuNBSyTQFg4zZh9OjeK\",\n        \"12y_hWPpAuTqPMJRJYsIAAgSbRqDHm9Gs\",\n        \"1m_O_Ax8Hi3DHrQZlS3obABDCmuaWUei3\",\n        \"1VfK1Er9yS91jPfPNUQ5sxMf3dl_wESyG\",\n        \"1CSsn-r-BHA3QHjn34FdZmrZR3zLv1sue\",\n        \"1YHvit6OcSu4nE8JIInsUsue6rGVj_qIS\",\n      ]}\n      blog={blog}\n    />\n  );\n}\n\nexport default PathTheLemons;\n","import { BlogPath } from \"../../../Enums/blogPath\";\nimport { HikeName } from \"../../../Enums/hikeName\";\n\nexport interface Hike {\n  name: string;\n  date: Date;\n  blogPath: string;\n  longitude: number;\n  latitude: number;\n  distance: number;\n  elevationGain: number;\n}\n\n// Canada\nexport const banffHikes: Hike[] = [\n  {\n    name: HikeName.CoryPass,\n    blogPath: BlogPath.CoryPass,\n    date: new Date(),\n    latitude: 51.2017,\n    longitude: -115.69,\n    distance: 0,\n    elevationGain: 0,\n  },\n  {\n    name: HikeName.SulphurMountain,\n    blogPath: BlogPath.SulphurMountain,\n    date: new Date(),\n    latitude: 51.1236,\n    longitude: -115.5556,\n    distance: 0,\n    elevationGain: 0,\n  },\n  {\n    name: HikeName.TunnelMountain,\n    blogPath: BlogPath.TunnelMountain,\n    date: new Date(),\n    latitude: 51.1767,\n    longitude: -115.5542,\n    distance: 0,\n    elevationGain: 0,\n  },\n];\n\nexport const gaspeHikes: Hike[] = [\n  {\n    name: HikeName.MountJacquesCartier,\n    blogPath: BlogPath.MountJacquesCartier,\n    date: new Date(),\n    latitude: 48.9833,\n    longitude: -65.95,\n    distance: 0,\n    elevationGain: 0,\n  },\n  {\n    name: HikeName.MountAlbert,\n    blogPath: BlogPath.MountAlbert,\n    date: new Date(),\n    latitude: 48.9214,\n    longitude: -66.19495,\n    distance: 0,\n    elevationGain: 0,\n  },\n];\n\nexport const squamishHikes: Hike[] = [\n  {\n    name: HikeName.MamquamFalls,\n    blogPath: BlogPath.MamquamFalls,\n    date: new Date(),\n    latitude: 49.72120658690391,\n    longitude: -123.09158981588705,\n    distance: 0,\n    elevationGain: 0,\n  },\n  {\n    name: HikeName.StawamusChief,\n    blogPath: BlogPath.StawamusChief,\n    date: new Date(),\n    latitude: 49.6867,\n    longitude: -123.135,\n    distance: 0,\n    elevationGain: 0,\n  },\n];\n\n// Italy\nexport const amalfiHikes: Hike[] = [\n  {\n    name: HikeName.PathOfLemons,\n    blogPath: BlogPath.PathOfTheLemons,\n    date: new Date(2023, 5, 5),\n    latitude: 40.66231747545338,\n    longitude: 14.630269119553638,\n    distance: 0,\n    elevationGain: 0,\n  },\n  {\n    name: HikeName.PathOfTheGods,\n    blogPath: BlogPath.PathOfTheGods,\n    date: new Date(2023, 5, 6),\n    latitude: 40.625117,\n    longitude: 14.534947,\n    distance: 5.8,\n    elevationGain: 1167,\n  },\n];\n\n// USA\nexport const adirondackHikes: Hike[] = [\n  {\n    name: HikeName.MountGiant,\n    blogPath: BlogPath.MountGiant,\n    date: new Date(),\n    latitude: 44.1437,\n    longitude: -73.7205,\n    distance: 0,\n    elevationGain: 0,\n  },\n  {\n    name: HikeName.AlgonquinPeak,\n    blogPath: BlogPath.AlgonquinPeak,\n    date: new Date(2023, 8, 19),\n    latitude: 44.1437,\n    longitude: -73.9865,\n    distance: 16.32,\n    elevationGain: 3632,\n  },\n  {\n    name: HikeName.JayMountain,\n    blogPath: BlogPath.JayMountain,\n    date: new Date(),\n    latitude: 44.3125,\n    longitude: -73.6857,\n    distance: 0,\n    elevationGain: 0,\n  },\n];\n\nexport const greenMountainHikes: Hike[] = [\n  {\n    name: HikeName.MountMansfield,\n    blogPath: BlogPath.MountMansfield,\n    date: new Date(),\n    latitude: 44.5437,\n    longitude: -72.8143,\n    distance: 0,\n    elevationGain: 0,\n  },\n];\n\n// All hike concatenation \nexport const allHikes = banffHikes\n  .concat(gaspeHikes)\n  .concat(squamishHikes)\n  .concat(amalfiHikes)\n  .concat(adirondackHikes)\n  .concat(greenMountainHikes);\n"],"names":["HoverBox","styled","Box","_templateObject","_taggedTemplateLiteral","StyledLink","Link","_templateObject2","props","_jsx","to","path","children","_jsxs","alignContent","direction","Button","onClick","icon","Text","alignSelf","text","darkMode","setDarkMode","useAtom","darkModeAtom","isOpen","setIsOpen","useState","burgerMenuStyles","useRef","bmBurgerBars","background","bmBurgerButton","position","width","height","left","top","bmBurgerBarsHover","bmCrossButton","bmCross","bmMenuWrap","bmMenu","padding","fontSize","overflow","bmMorphShape","fill","bmItemList","color","bmItem","display","bmOverlay","closeMenu","Menu","onClose","onOpen","styles","current","BurgerMenuItem","Home","TreeOption","Sun","Moon","darkTheme","location","useLocation","Header","style","paddingTop","sticky","dark","light","justify","Path","label","primary","pathname","hoverIndicator","Hikes","paddingRight","FullScreenPageMobile","Page","FullScreenPageDesktop","_Fragment","MediaQuery","query","BurgerMenu","PageHeader","imageUrlFormatter","imageId","concat","StyledPageContent","PageContent","HeaderContainer","div","CoverImage","Image","_templateObject3","CoverImageSkeleton","Skeleton","_templateObject4","TitleContainer","_templateObject5","SummaryText","_templateObject6","StatsCard","Card","_templateObject7","AllTrailsIFrame","iframe","_templateObject8","AllTrailsSkeleton","_templateObject9","CarouselImage","_templateObject10","StyledCarousel","Carousel","_templateObject11","CarouselSkeleton","_templateObject12","ThreeDimensionalMapButton","_templateObject13","MarkdownHeader","Heading","_templateObject14","MarkdownContainer","_templateObject15","loadedImages","setLoadedImages","isAllTrailsIframeLoaded","setIsAlltrailsIframeLoaded","isCoverImageLoaded","setIsCoverImageLoaded","appPageRef","useEffect","_appPageRef$current","scrollIntoView","ref","AppPage","onLoad","fit","src","coverPhotoId","hidden","title","hike","name","subtitle","date","toLocaleDateString","year","month","day","summary","level","className","allTrailsIframeSource","Table","TableBody","TableRow","TableCell","scope","distance","elevationGain","String","latitude","longitude","galleryImageIds","length","wrap","play","map","Markdown","blog","HikeName","setBlog","amalfiHikes","find","PathOfLemons","fetch","Blog","then","response","HikeBlogTemplate","banffHikes","CoryPass","blogPath","BlogPath","Date","SulphurMountain","TunnelMountain","gaspeHikes","MountJacquesCartier","MountAlbert","squamishHikes","MamquamFalls","StawamusChief","PathOfTheLemons","PathOfTheGods","adirondackHikes","MountGiant","AlgonquinPeak","JayMountain","greenMountainHikes","MountMansfield","allHikes"],"sourceRoot":""}