{"version":3,"file":"static/js/261.13748e0d.chunk.js","mappings":"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","sources":["Components/BurgerMenuItem.tsx","Components/BurgerMenu.tsx","Components/PageHeader.tsx","Components/AppPage.tsx","Pages/Hikes/Map/MapMarker.tsx","Pages/ThreeDimensionalMap/ThreeDimensionalMap.tsx"],"sourcesContent":["import { Box, Button, Text } from \"grommet\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\ninterface BurgerMenuItemProps {\n  path: string;\n  text: string;\n  icon: JSX.Element | undefined;\n  onClick: () => void;\n}\n\nfunction BurgerMenuItem(props: BurgerMenuItemProps): JSX.Element {\n  return (\n    <StyledLink to={props.path}>\n      <HoverBox alignContent=\"center\" direction=\"row\">\n        <Button onClick={props.onClick} icon={props.icon} />\n        <Text alignSelf=\"center\">{props.text}</Text>\n      </HoverBox>\n    </StyledLink>\n  );\n}\n\nconst HoverBox = styled(Box)`\n  &:hover {\n    opacity: 0.6;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: inherit;\n  color: inherit;\n`;\n\nexport default BurgerMenuItem;\n","import { useAtom } from \"jotai\";\nimport { stack as Menu } from \"react-burger-menu\";\nimport { darkModeAtom } from \"../Utils/Theme\";\nimport { Box, Button, Text } from \"grommet\";\nimport { Home, Moon, Sun, TreeOption } from \"grommet-icons\";\nimport { useRef, useState } from \"react\";\nimport BurgerMenuItem from \"./BurgerMenuItem\";\n\nfunction BurgerMenu(): JSX.Element {\n  const [darkMode, setDarkMode] = useAtom(darkModeAtom);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const burgerMenuStyles = useRef({\n    bmBurgerBars: {\n      background: \"#00873D\",\n    },\n    bmBurgerButton: {\n      position: \"fixed\",\n      width: \"36px\",\n      height: \"30px\",\n      left: \"24px\",\n      top: \"24px\",\n    },\n    bmBurgerBarsHover: {\n      background: \"#00873D\",\n    },\n    bmCrossButton: {\n      height: \"24px\",\n      width: \"24px\",\n    },\n    bmCross: {\n      background: \"#bdc3c7\",\n    },\n    bmMenuWrap: {\n      position: \"fixed\",\n      height: \"100%\",\n    },\n    bmMenu: {\n      background: \"#444444\",\n      padding: \"2.5em 1.5em 0\",\n      fontSize: \"1.15em\",\n      overflow: \"hidden\",\n    },\n    bmMorphShape: {\n      fill: \"#373a47\",\n    },\n    bmItemList: {\n      color: \"#b8b7ad\",\n      padding: \"0.8em\",\n    },\n    bmItem: {\n      display: \"inline-block\",\n    },\n    bmOverlay: {\n      background: \"rgba(0, 0, 0, 0.3)\",\n    },\n  });\n\n  const closeMenu = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      onClose={() => setIsOpen(false)}\n      onOpen={() => setIsOpen(true)}\n      styles={burgerMenuStyles.current}\n    >\n      <Box>\n        <BurgerMenuItem\n          path=\"/\"\n          onClick={closeMenu}\n          text=\"Home\"\n          icon={<Home color=\"#FFFFFF\" />}\n        />\n        <BurgerMenuItem\n          path=\"/hikes\"\n          onClick={closeMenu}\n          text=\"Hikes\"\n          icon={<TreeOption color=\"#FFFFFF\" />}\n        />\n        <Box alignContent=\"center\" direction=\"row\">\n          <Button\n            icon={darkMode ? <Sun color=\"#FFFFFF\" /> : <Moon color=\"#FFFFFF\" />}\n            onClick={() => setDarkMode((darkTheme) => !darkTheme)}\n          />\n          <Text alignSelf=\"center\">Theme</Text>\n        </Box>\n      </Box>\n    </Menu>\n  );\n}\n\nexport default BurgerMenu;\n","import { Box, Button, Header } from \"grommet\";\nimport { Home, Moon, Sun, TreeOption } from \"grommet-icons\";\nimport { useAtom } from \"jotai\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { darkModeAtom } from \"../Utils/Theme\";\nimport { styled } from \"styled-components\";\nimport { Path } from \"../Enums/path\";\n\nfunction PageHeader(): JSX.Element {\n  const [darkMode, setDarkMode] = useAtom(darkModeAtom);\n  const location = useLocation();\n\n  return (\n    <Header\n      style={{ paddingTop: \"16px\" }}\n      sticky={\"scrollup\"}\n      background={{ dark: \"dark-1\", light: \"light-1\" }}\n    >\n      <Box direction=\"row\" justify=\"between\">\n        <StyledLink to={Path.Home}>\n          <Button\n            icon={<Home />}\n            label=\"Home\"\n            primary={location.pathname === Path.Home}\n            hoverIndicator\n          />\n        </StyledLink>\n        <StyledLink to={Path.Hikes}>\n          <Button\n            icon={<TreeOption />}\n            label=\"Hikes\"\n            primary={location.pathname === Path.Hikes}\n            hoverIndicator\n          />\n        </StyledLink>\n      </Box>\n      <Button\n        style={{ paddingRight: \"16px\" }}\n        icon={darkMode ? <Sun color=\"#FFFFFF\" /> : <Moon color=\"#000000\" />}\n        onClick={() => setDarkMode((darkTheme) => !darkTheme)}\n      />\n    </Header>\n  );\n}\n\nconst StyledLink = styled(Link)`\n  padding-left: 16px;\n`;\n\nexport default PageHeader;\n","import { Page } from \"grommet\";\nimport styled from \"styled-components\";\nimport BurgerMenu from \"./BurgerMenu\";\nimport MediaQuery from \"react-responsive\";\nimport PageHeader from \"./PageHeader\";\n\ninterface AppPageProps {\n  children: React.ReactNode;\n}\n\nfunction AppPage(props: AppPageProps): JSX.Element {\n  return (\n    <>\n      <MediaQuery query=\"(max-device-width: 1024px)\">\n        <BurgerMenu />\n        <FullScreenPageMobile background=\"pageBackground\">\n          {props.children}\n        </FullScreenPageMobile>\n      </MediaQuery>\n      <MediaQuery query=\"(min-device-width: 1024px)\">\n        <PageHeader />\n        <FullScreenPageDesktop background=\"pageBackground\">\n          {props.children}\n        </FullScreenPageDesktop>\n      </MediaQuery>\n    </>\n  );\n}\n\nconst FullScreenPageMobile = styled(Page)`\n  min-height: 100vh;\n  padding-top: 72px;\n  padding-bottom: 24px;\n`;\n\nconst FullScreenPageDesktop = styled(Page)`\n  min-height: 100vh;\n  padding-top: 32px;\n`;\n\nexport default AppPage;\n","import { Marker } from \"react-map-gl\";\nimport MapPin from \"./MapPin.png\";\nimport styled from \"styled-components\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport \"./MapMarker.css\";\nimport { useNavigate } from \"react-router-dom\";\n\ninterface MapMarkerProps {\n  blogPath?: string;\n  closeButton?: boolean;\n  open?: boolean;\n  markerName: string;\n  latitude: number;\n  longitude: number;\n}\n\nfunction MapMarker(props: MapMarkerProps): JSX.Element {\n  const markerRef = useRef<mapboxgl.Marker>(null);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const navigate = useNavigate();\n\n  const popup = useMemo(() => {\n    return new mapboxgl.Popup({\n      anchor: \"bottom\",\n      closeButton: props.closeButton,\n      offset: 16,\n      className: \"marker-text\",\n    }).setText(props.markerName);\n  }, [props.closeButton, props.markerName]);\n\n  const togglePopup = useCallback(() => {\n    markerRef.current?.togglePopup();\n  }, []);\n\n  useEffect(() => {\n    if (props.open === true && isPopupOpen === false) {\n      togglePopup();\n      setIsPopupOpen(true);\n    } else if (props.open === false && isPopupOpen === true) {\n      togglePopup();\n      setIsPopupOpen(false);\n    }\n  }, [isPopupOpen, props.open, togglePopup]);\n\n  return (\n    <Marker\n      ref={markerRef}\n      onClick={() => props.blogPath && navigate(props.blogPath)}\n      longitude={props.longitude}\n      latitude={props.latitude}\n      popup={popup}\n    >\n      <StyledMapPin\n        onMouseEnter={() => !props.open && togglePopup()}\n        onMouseLeave={() => !props.open && togglePopup()}\n        alt=\"Map Pin\"\n        src={MapPin}\n      />\n    </Marker>\n  );\n}\n\nconst StyledMapPin = styled.img`\n  cursor: pointer;\n  width: 16px;\n`;\n\nexport default MapMarker;\n","import Map, { Source, Layer } from \"react-map-gl\";\n\nimport type { SkyLayer } from \"react-map-gl\";\nimport AppPage from \"../../Components/AppPage\";\nimport { useSearchParams } from \"react-router-dom\";\nimport MapMarker from \"../Hikes/Map/MapMarker\";\nimport MapboxAccessToken from \"../../Utils/MapboxAccessToken.txt\";\nimport { useState } from \"react\";\n\nfunction ThreeDimensionalMap(): JSX.Element {\n  const [searchParams] = useSearchParams();\n  const [mapboxAcessToken, setMapboxAccessToken] = useState<string | undefined>(\n    undefined\n  );\n\n  fetch(MapboxAccessToken)\n    .then((response) => response.text())\n    .then((text) => setMapboxAccessToken(text));\n\n  const longitudeQueryParam = searchParams.get(\"longitude\");\n  const latitudeQueryParam = searchParams.get(\"latitude\");\n  const nameQueryParam = searchParams.get(\"name\");\n\n  let longitude = 0;\n  let latitude = 0;\n  let name = \"\";\n\n  if (\n    longitudeQueryParam != null &&\n    latitudeQueryParam != null &&\n    nameQueryParam != null\n  ) {\n    longitude = Number(longitudeQueryParam);\n    latitude = Number(latitudeQueryParam);\n    name = nameQueryParam;\n  }\n\n  return (\n    <AppPage>\n      {mapboxAcessToken && (\n        <Map\n          initialViewState={{\n            longitude: longitude,\n            latitude: latitude,\n            zoom: 13,\n            bearing: 80,\n            pitch: 80,\n          }}\n          maxPitch={85}\n          terrain={{ source: \"mapbox-dem\", exaggeration: 1.5 }}\n          mapboxAccessToken={mapboxAcessToken}\n          style={{ width: \"100%\", height: \"100vh\" }}\n          mapStyle={\"mapbox://styles/mapbox/satellite-v9\"}\n        >\n          <Source\n            id=\"mapbox-dem\"\n            type=\"raster-dem\"\n            url=\"mapbox://mapbox.mapbox-terrain-dem-v1\"\n            tileSize={512}\n            maxzoom={14}\n          />\n          <MapMarker\n            open\n            closeButton\n            markerName={name}\n            latitude={latitude}\n            longitude={longitude}\n          />\n          <Layer {...skyLayer} />\n        </Map>\n      )}\n    </AppPage>\n  );\n}\nconst skyLayer: SkyLayer = {\n  id: \"sky\",\n  type: \"sky\",\n  paint: {\n    \"sky-type\": \"atmosphere\",\n    \"sky-atmosphere-sun\": [0.0, 0.0],\n    \"sky-atmosphere-sun-intensity\": 15,\n  },\n};\n\nexport default ThreeDimensionalMap;\n"],"names":["HoverBox","styled","Box","_templateObject","_taggedTemplateLiteral","StyledLink","Link","_templateObject2","props","_jsx","to","path","children","_jsxs","alignContent","direction","Button","onClick","icon","Text","alignSelf","text","darkMode","setDarkMode","useAtom","darkModeAtom","isOpen","setIsOpen","useState","burgerMenuStyles","useRef","bmBurgerBars","background","bmBurgerButton","position","width","height","left","top","bmBurgerBarsHover","bmCrossButton","bmCross","bmMenuWrap","bmMenu","padding","fontSize","overflow","bmMorphShape","fill","bmItemList","color","bmItem","display","bmOverlay","closeMenu","Menu","onClose","onOpen","styles","current","BurgerMenuItem","Home","TreeOption","Sun","Moon","darkTheme","location","useLocation","Header","style","paddingTop","sticky","dark","light","justify","Path","label","primary","pathname","hoverIndicator","Hikes","paddingRight","FullScreenPageMobile","Page","FullScreenPageDesktop","_Fragment","MediaQuery","query","BurgerMenu","PageHeader","StyledMapPin","img","markerRef","isPopupOpen","setIsPopupOpen","navigate","useNavigate","popup","useMemo","mapboxgl","anchor","closeButton","offset","className","setText","markerName","togglePopup","useCallback","_markerRef$current","useEffect","open","Marker","ref","blogPath","longitude","latitude","onMouseEnter","onMouseLeave","alt","src","skyLayer","id","type","paint","searchParams","useSearchParams","mapboxAcessToken","setMapboxAccessToken","undefined","fetch","MapboxAccessToken","then","response","longitudeQueryParam","get","latitudeQueryParam","nameQueryParam","name","Number","AppPage","Map","initialViewState","zoom","bearing","pitch","maxPitch","terrain","source","exaggeration","mapboxAccessToken","mapStyle","Source","url","tileSize","maxzoom","MapMarker","Layer"],"sourceRoot":""}